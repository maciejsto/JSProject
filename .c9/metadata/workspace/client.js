{"changed":true,"filter":false,"title":"client.js","tooltip":"/client.js","value":"// connect to the socket server\n//var services = require(\"../../../src/backend/config/serviceConfig\").services;\n//var sm = require(\"../../../src/backend/service/manager\")(services);\nvar services     = require(\"./src/backend/config/serviceConfig\").services;\nvar sm           = require(\"./src/backend/service/manager\")(services);\nvar args = process.argv.slice(2);\n//var serialPort = sm.get('serial')('/dev/ttyACM0');\n//var arduinoModel = sm.get('arduinomodel')(serialPort);\nvar heroku_string = \"http://jsproject.herokuapp.com/\";\nvar local_string  = \"http://localhost:5000\";\nvar socket = '';\n\n\n    //socket = require('socket.io-client')(heroku_string);\n\n    socket = require('socket.io-client')(local_string);\n\nvar socket = {};\n    //socket = require('socket.io-client')(heroku_string);\n    socket = require('socket.io-client')(local_string);\nvar gpio = require('rpi-gpio');\n\n\ngpio.setup(7, gpio.DIR_OUT, write);\n\nfunction write() {\n    gpio.write(7, true, function(err) {\n        if (err) throw err;\n        console.log('Written to pin');\n    });\n}\n\n\n\nprocess.on('SIGINT', function(){\n    gpio.write(12, true, function(){\n        gpio.destroy(function(){\n            process.exit();\n        });\n    });\n});\n\ngpio.setup(12, gpio.DIR_OUT, function(){\n    gpio.write(12, true);\n});\n\n\nvar ardu = function() {\n    //serialPort.on('data', function (data) {\n\n        setTimeout(function () {\n            console.log('calling ardu..');\n\n            socket.emit('arduData', {arduinoData: '_some dummy data from arduiuno'});\n            //var data = arduinoModel.getSerialData();\n\n            //console.log(\"data\",data);\n            //console.log(JSON.stringify(data));\n            //socket.emit('arduinoData', {data: JSON.stringify(data)});\n\n        }, 1000);\n    //});\n};\n\nsocket.on('connect', function onConnect() {\n    console.log('socket connected to host: ',socket.io.opts.host);\n    console.log(socket.io.engine.id);\n    socket.io.engine.id = 'myraspberrypiID';\n    console.log('client connected to server');\n    console.log('socket id: ',JSON.stringify(socket.io.engine.id));\n    //console.log('socket id: ',socket.id);\n    \n    /*emit data on connection to server*/\n    socket.emit('client', {id: socket.id, data: 'client sais: Hello mighty server'});\n    //arduinoModel.connect();\n    //ardu();\n\n\n    socket.on('updateState', function onUpdateState(data) {\n        console.log('state updated , got it from server !!', data.data.state);\n        var state = data.data.state;\n\n        //to be uncommented\n        //injecting button state into Raspberry gpio pins (12)\n\n        gpio.write(12, state, function(err){\n            if (err) throw err;\n            console.log('writen to pin 12');\n        });\n\n        /*\n        serialPort.on('open', function(){\n            console.log('serial port opened');\n            serialPort.write(\"ls\\n\", function(err, result){\n                console.log('err', err);\n                console.log('result', result);\n            });\n        });\n        */\n\n        //ardu();\n        //var data = arduinoModel.getSerialData();\n        //console.log(JSON.stringify(data));\n        //socket.emit('message', {data: JSON.stringify(data)});\n        //socket.emit('message', {data: JSON.stringify(data[0])});\n    });\n\n    socket.on('stateChanged', function(data){\n       console.log('client received data from index.ejs directly ');\n    });\n\n    socket.on('server',function(data){\n        console.log(data);\n    });\n\n    socket.on('disconnect', function() {\n        console.log('server stopped or crashed'); \n    });\n\n});\n\n","undoManager":{"mark":11,"position":15,"stack":[[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":14},"end":{"row":10,"column":15}},"text":"'"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":10,"column":13},"end":{"row":10,"column":14}},"text":"'"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":13},"end":{"row":10,"column":14}},"text":"{"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":14},"end":{"row":10,"column":15}},"text":"}"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":10,"column":0},"end":{"row":11,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":12,"column":0},"end":{"row":13,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":12,"column":0},"end":{"row":13,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":13,"column":0},"end":{"row":14,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":14,"column":0},"end":{"row":15,"column":0}},"nl":"\n","lines":[""]}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":13,"column":0},"end":{"row":13,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":13,"column":0},"end":{"row":13,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":9,"column":0},"end":{"row":9,"column":12}},"text":"<<<<<<< HEAD"},{"action":"insertText","range":{"start":{"row":9,"column":12},"end":{"row":10,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":10,"column":44},"end":{"row":11,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":11,"column":0},"end":{"row":19,"column":0}},"lines":["=======","var local_string  = \"http://localhost:5000\";","var socket = '';","","","    //socket = require('socket.io-client')(heroku_string);","","    socket = require('socket.io-client')(local_string);"]},{"action":"insertText","range":{"start":{"row":19,"column":0},"end":{"row":19,"column":48}},"text":">>>>>>> c2266bd685164cea655e009f5ffbab710824ac72"},{"action":"removeText","range":{"start":{"row":26,"column":0},"end":{"row":26,"column":2}},"text":"/*"},{"action":"removeText","range":{"start":{"row":50,"column":0},"end":{"row":50,"column":2}},"text":"*/"},{"action":"removeText","range":{"start":{"row":88,"column":0},"end":{"row":88,"column":10}},"text":"        /*"},{"action":"removeText","range":{"start":{"row":93,"column":0},"end":{"row":93,"column":10}},"text":"        */"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":9,"column":0},"end":{"row":10,"column":0}},"nl":"\n","lines":["<<<<<<< HEAD"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":9,"column":0},"end":{"row":10,"column":0}},"nl":"\n","lines":["var local_string  = \"http://localhost:8080\";"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":9,"column":0},"end":{"row":10,"column":0}},"nl":"\n","lines":["======="]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":16,"column":0},"end":{"row":17,"column":0}},"nl":"\n","lines":[">>>>>>> c2266bd685164cea655e009f5ffbab710824ac72"]}]}]]},"ace":{"folds":[],"scrolltop":1380,"scrollleft":0,"selection":{"start":{"row":16,"column":0},"end":{"row":16,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":97,"state":"comment_regex_allowed","mode":"ace/mode/javascript"}},"timestamp":1416231136943}