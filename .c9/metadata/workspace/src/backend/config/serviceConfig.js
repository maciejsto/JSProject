{"changed":true,"filter":false,"title":"serviceConfig.js","tooltip":"/src/backend/config/serviceConfig.js","value":"/**\n * Created by syzer on 5/15/2014.\n */\n'use strict';\n\nvar ROOT_PATH = __dirname + '/../';\nconsole.log(ROOT_PATH);\nvar services = {\n    _: require('lodash-node'),\n    app: function addService(sm) {\n        var express = sm.get('express');\n        var app = express();\n        //var session = sm.get('session');\n        var bodyParser = sm.get('bodyParser');\n        //var morgan = sm.get('morgan');\n        var router = express.Router();\n        //app.use(sm.get('bodyParser'));\n        app.use(sm.get('methodOverride'));\n        //app.use(morgan('dev'));\n        //app.use(session({secret: 'keyboard cat'}))\n        var allowCrossDomain = function (req, res, next) {\n            res.header('Access-Control-Allow-Origin', '*');//config.allowedDomains\n            res.header('Access-Control-Allow-Methods', 'GET,PUT,POST,DELETE');\n            res.header('Access-Control-Allow-Headers', 'Content-Type');\n            next();\n        };\n        \n        /*\n        app.use(express.cookieParser('asd;lfkajs;ldfkj'));\n        app.use(express.session({\n            secret: '<h1>WHEEYEEE</h1>',\n            key: 'sid',\n            cookie: {\n                secret: true,\n                expires: false\n            }\n        }));\n        \n        */\n        app.use(\"/bower_components\",express.static(ROOT_PATH + 'bower_components'));\n        app.use(allowCrossDomain);\n        app.use(express.static(ROOT_PATH + 'src/front'));\n        app.locals.appname = \"Express.js Arduino App\";\n        return app;\n    },\n\n\n    arduinomodel: function addService(sm){\n        return function(){\n            //var serialPort = sm.get('serial')(sm.get('config').Serial.port);\n            var arduinoModel = require(ROOT_PATH + \"service/arduino\");\n            return arduinoModel;\n        };\n    },\n    astronaut: function addService(sm){\n    \tvar astronaut = require(ROOT_PATH + \"service/astronauts\");\n    \treturn astronaut;\n    },\n\n    about: function addService(sm){\n        return require(ROOT_PATH + \"../routes/about\");\n    },\n\n    bodyParser: require('body-parser'),\n    //cheerio: require('cheerio'),\n    //cookieParser: require('cookie-parser')(),\n    connect: require('connect'),\n//    config: require(ROOT_PATH + 'src/backend/config/config')(),\n    config: require(ROOT_PATH + 'config/config')(),\n    \n    \n    'logfmt': function addService(sm){\n    \tvar logfmt = require('logfmt');\n    \tvar logger = logfmt.requestLogger();\n    \t\n    \treturn logger; \n    },\n//    'controller.referenceSearch': function addService(sm) {\n//        return require(ROOT_PATH + 'controllers/referenceSearch')(\n//            sm.get('log'),\n//            sm.get('service.web.pubmed'),\n//            sm.get('q'));\n//    },\n    port: (process.env.PORT || 8081),\n    express: require('express'),\n    'expres.restify.mongoose': require('express-restify-mongoose'),\n    http: require('http'),\n    file: function addService(sm) {\n        return require(ROOT_PATH + 'services/file')(sm.get('fs'));\n    },\n    fs: require('fs'),\n    io: function addService(sm){\n        var app = sm.get('app');\n        var io = sm.get('socket');\n        return function(server){\n          var sio = io.listen(server,{\n              \"transports\": [\"polling\"],\n              \"polling duration\": 10\n          });\n            return sio;\n        };\n    },\n    httpServer: function addService(sm){\n        var http = sm.get('http');\n        var app = sm.get('app');\n        var httpServer = http.createServer(app);\n        return httpServer;\n    },\n    methodOverride: require('method-override')(),\n    'model.restEndPoints': function addService(sm) {\n        return require(ROOT_PATH + 'models/restEndpoints') (\n            sm.get('config'),\n            sm.get('schema'),\n            sm.get('mongoose')\n        );\n    },\n    //'model.userRoles': require(ROOT_PATH + 'models/auth/userRoles'),\n\n    mongoose: require('mongoose'),\n    mongooseapi: function addService(sm){\n      var uri = sm.get('config').mongoDb.uri;\n      var mongoose = sm.get('mongoose');\n        var options = {\n            db: { native_parser: true },\n            server: { poolSize: 5 },\n            replset: { rs_name: 'myReplicaSetName' },\n            user: '',\n            pass: ''\n        }\n        return mongoose.connect(uri, options);\n    },\n    mongo: require('mongodb').Db,\n    mongoClient: require('mongodb').MongoClient,\n    //mongoskin: require('mongoskin'),\n    //morgan: require('morgan'),\n\n    db: function addService(sm){\n        return require(ROOT_PATH + \"/service/db\");\n    },\n\n    mongoDb: function addService(sm) {\n\n        var mongo = sm.get('mongo');\n        var mongoDb = {};\t// this does not return anything ?\n\n        var when = sm.get('when');\n        \n        return function dbConnect(callback){\n\n\n            var dbUri = sm.get('config').mongoDb.uri;\n            //mongo.Db.connect(dbUri,function(err, db){\n        \tmongo.Db.connect(dbUri, function(err, db){\n\n\t        \t\tif (err){\n                        console.log('error when connecting to database');\n\t        \t\t\t//return callback(err);\n\t        \t\t}else{\n                        mongoDb = db;\n                        console.log(\"you are connected to mongodb:\",db.databaseName);\n                        callback(null, mongoDb);\n                    };\n        \t});\n        };\n    },\n    path: require('path'),\n    //passport: require('passport'),\n    //'passport.google': require('passport-google'),\n    //'passport.local': require('passport-local'),\n    //q: require('q'),        //when js\n    //request: require('request'),\n    restify: require('express-restify-mongoose'),\n    'service.web.driverjs': function addService(sm) {\n        return require(ROOT_PATH + 'service/web/driverjs')(\n            require('webdriverjs'),\n            sm.get('config')\n        );\n    },\n    routes: function addService(sm){\n        var routes = []\n        var fs = this.fs;\n        fs.readdirSync(ROOT_PATH + \"../routes\").forEach(function(file){\n            if (file.substr(-3) === '.js') {\n                routes.push(file);\n            }\n        })\n        var obj = [];\n        var temp = [];\n        routes.forEach(function(route){\n            var r = route.substr(-3);\n            var string = '';\n            var i = 0;\n            while(route[i] !== '.'){\n                string += route[i];\n                i++;\n            }\n            obj[string] = (require(ROOT_PATH + '../routes/' + route))[string];\n        })\n        return obj;\n    },\n    schema: function addService(sm) {\n        return sm.get('mongoose').Schema;\n    },\n\n    serial: function addService(sm){    //this returns a function , good for callback\n\n        return function(portName){\n            var SerialPort = require(\"serialport\").SerialPort;\n            var serialPort = new SerialPort(portName,\n                {\n                    bauderate: sm.get('config').Serial.bauderate\n\n                }\n                ,sm.get('config').Serial.flag\n                , function(err,state){  // flag determines if port is automatically opened , true -> open, false -> not open\n                    if( err){\n                        console.log('error when opening serial port');\n                    }else{\n                        console.log('port connected');\n                    }\n\n                });   //second param is openFlag by default set to true which means open port immediatelly\n            return serialPort;\n        };\n    },\n    //session: require('express-session'),\n    socket: function addService(sm) {\n        var socket = require('socket.io');\n        return socket;\n    },\n\n    users:  function addService(sm) {\n        var mongoDb = sm.get('mongoDb');\n        //var dbUri = sm.get('config').mongoDb.uri;\n       return function getUsers(callback){\n\t\t\tmongoDb(function(err, db){\n\n\t\t\t\t\tvar users = require(ROOT_PATH + 'service/users')(db);\n\t\t\t\t\treturn callback(null, users); //TODO with or without return ??\n\t\t\t\t});\n        };\n    },\n    \n\n    when: require('when')\n};\n\nfunction logErrors(err, req, res, next) {\n  console.error('logErrors', err.toString());\n  next(err);\n}\n\nfunction clientErrorHandler(err, req, res, next) {\n  console.error('clientErrors ', err.toString());\n  res.send(500, { error: err.toString()});\n  if (req.xhr) {\n    console.error(err);\n    res.send(500, { error: err.toString()});\n  } else {\n    next(err);\n  }\n}\n\nfunction errorHandler(err, req, res, next) {\n  console.error('lastErrors ', err.toString());\n  res.send(500, {error: err.toString()});\n}\nmodule.exports.services = services;\n","undoManager":{"mark":54,"position":56,"stack":[[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":25,"column":10},"end":{"row":26,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":26,"column":0},"end":{"row":26,"column":8}},"text":"        "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":26,"column":8},"end":{"row":27,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":27,"column":0},"end":{"row":27,"column":8}},"text":"        "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":27,"column":8},"end":{"row":28,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":28,"column":0},"end":{"row":28,"column":8}},"text":"        "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":27,"column":8},"end":{"row":27,"column":60}},"text":"  app.use(express.cookieParser('asd;lfkajs;ldfkj'));"},{"action":"insertText","range":{"start":{"row":27,"column":60},"end":{"row":28,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":28,"column":0},"end":{"row":35,"column":0}},"lines":["  app.use(express.session({","    secret: '<h1>WHEEYEEE</h1>',","    key: 'sid',","    cookie: {","      secret: true,","      expires: false","    }"]},{"action":"insertText","range":{"start":{"row":35,"column":0},"end":{"row":35,"column":6}},"text":"  }));"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":27,"column":9},"end":{"row":27,"column":10}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":27,"column":8},"end":{"row":27,"column":9}},"text":" "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":28,"column":2},"end":{"row":28,"column":4}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":28,"column":4},"end":{"row":28,"column":8}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":28,"column":8},"end":{"row":28,"column":12}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":29,"column":4},"end":{"row":29,"column":8}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":29,"column":8},"end":{"row":29,"column":12}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":30,"column":4},"end":{"row":30,"column":8}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":30,"column":8},"end":{"row":30,"column":12}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":31,"column":4},"end":{"row":31,"column":8}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":31,"column":8},"end":{"row":31,"column":12}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":32,"column":6},"end":{"row":32,"column":8}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":32,"column":8},"end":{"row":32,"column":12}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":33,"column":6},"end":{"row":33,"column":8}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":33,"column":8},"end":{"row":33,"column":12}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":34,"column":4},"end":{"row":34,"column":8}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":34,"column":8},"end":{"row":34,"column":12}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":35,"column":2},"end":{"row":35,"column":4}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":35,"column":4},"end":{"row":35,"column":8}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":32,"column":12},"end":{"row":32,"column":16}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":33,"column":12},"end":{"row":33,"column":16}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":28,"column":8},"end":{"row":28,"column":12}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":26,"column":8},"end":{"row":27,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":27,"column":0},"end":{"row":27,"column":8}},"text":"        "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":27,"column":8},"end":{"row":27,"column":9}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":27,"column":9},"end":{"row":27,"column":10}},"text":"*"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":36,"column":12},"end":{"row":37,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":37,"column":0},"end":{"row":37,"column":8}},"text":"        "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":37,"column":8},"end":{"row":38,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":38,"column":0},"end":{"row":38,"column":8}},"text":"        "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":8},"end":{"row":38,"column":10}},"text":"()"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":9},"end":{"row":38,"column":10}},"text":"*"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":9},"end":{"row":38,"column":10}},"text":"*"}]}],[{"group":"doc","deltas":[{"action":"removeText","range":{"start":{"row":38,"column":8},"end":{"row":38,"column":10}},"text":"()"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":8},"end":{"row":38,"column":9}},"text":"*"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":9},"end":{"row":38,"column":10}},"text":"/"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":38,"column":10},"end":{"row":39,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":39,"column":0},"end":{"row":39,"column":8}},"text":"        "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":39,"column":8},"end":{"row":39,"column":34}},"text":"app.configure(function() {"},{"action":"insertText","range":{"start":{"row":39,"column":34},"end":{"row":40,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":40,"column":0},"end":{"row":43,"column":0}},"lines":["  app.use(logErrors);","  app.use(clientErrorHandler);","  app.use(errorHandler);"]},{"action":"insertText","range":{"start":{"row":43,"column":0},"end":{"row":43,"column":3}},"text":"});"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":2},"end":{"row":40,"column":4}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":4},"end":{"row":40,"column":8}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":41,"column":2},"end":{"row":41,"column":4}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":41,"column":4},"end":{"row":41,"column":8}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":42,"column":2},"end":{"row":42,"column":4}},"text":"  "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":42,"column":4},"end":{"row":42,"column":8}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":43,"column":0},"end":{"row":43,"column":4}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":43,"column":4},"end":{"row":43,"column":8}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":40,"column":8},"end":{"row":40,"column":12}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":41,"column":8},"end":{"row":41,"column":12}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":42,"column":8},"end":{"row":42,"column":12}},"text":"    "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":43,"column":11},"end":{"row":44,"column":0}},"text":"\n"},{"action":"insertText","range":{"start":{"row":44,"column":0},"end":{"row":44,"column":8}},"text":"        "}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":252,"column":2},"end":{"row":253,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":253,"column":0},"end":{"row":254,"column":0}},"text":"\n"}]}],[{"group":"doc","deltas":[{"action":"insertText","range":{"start":{"row":254,"column":0},"end":{"row":254,"column":41}},"text":"function logErrors(err, req, res, next) {"},{"action":"insertText","range":{"start":{"row":254,"column":41},"end":{"row":255,"column":0}},"text":"\n"},{"action":"insertLines","range":{"start":{"row":255,"column":0},"end":{"row":273,"column":0}},"lines":["  console.error('logErrors', err.toString());","  next(err);","}","","function clientErrorHandler(err, req, res, next) {","  console.error('clientErrors ', err.toString());","  res.send(500, { error: err.toString()});","  if (req.xhr) {","    console.error(err);","    res.send(500, { error: err.toString()});","  } else {","    next(err);","  }","}","","function errorHandler(err, req, res, next) {","  console.error('lastErrors ', err.toString());","  res.send(500, {error: err.toString()});"]},{"action":"insertText","range":{"start":{"row":273,"column":0},"end":{"row":273,"column":1}},"text":"}"}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":39,"column":0},"end":{"row":44,"column":0}},"nl":"\n","lines":["        app.configure(function() {","            app.use(logErrors);","            app.use(clientErrorHandler);","            app.use(errorHandler);","        });"]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":39,"column":0},"end":{"row":40,"column":0}},"nl":"\n","lines":["        "]}]}],[{"group":"doc","deltas":[{"action":"removeLines","range":{"start":{"row":39,"column":0},"end":{"row":40,"column":0}},"nl":"\n","lines":["        "]}]}]]},"ace":{"folds":[],"scrolltop":2983,"scrollleft":0,"selection":{"start":{"row":34,"column":30},"end":{"row":34,"column":30},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":16,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1415793174277}