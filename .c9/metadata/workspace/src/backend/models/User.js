{"filter":false,"title":"User.js","tooltip":"/src/backend/models/User.js","undoManager":{"mark":13,"position":13,"stack":[[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":3}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["/"],"id":4}],[{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["&"],"id":5}],[{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"remove","lines":["&"],"id":6}],[{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["*"],"id":7}],[{"start":{"row":12,"column":0},"end":{"row":12,"column":1},"action":"insert","lines":["8"],"id":8}],[{"start":{"row":12,"column":0},"end":{"row":12,"column":1},"action":"remove","lines":["8"],"id":9}],[{"start":{"row":12,"column":0},"end":{"row":12,"column":1},"action":"insert","lines":["*"],"id":10}],[{"start":{"row":12,"column":1},"end":{"row":12,"column":2},"action":"insert","lines":["/"],"id":11}],[{"start":{"row":12,"column":2},"end":{"row":13,"column":0},"action":"insert","lines":["",""],"id":12}],[{"start":{"row":13,"column":0},"end":{"row":14,"column":0},"action":"insert","lines":["",""],"id":13}],[{"start":{"row":14,"column":0},"end":{"row":59,"column":52},"action":"insert","lines":["// app/models/user.js","// load the things we need","var mongoose = require('mongoose');","var bcrypt   = require('bcrypt-nodejs');","","// define the schema for our user model","var userSchema = mongoose.Schema({","","    local            : {","        email        : String,","        password     : String,","    },","    facebook         : {","        id           : String,","        token        : String,","        email        : String,","        name         : String","    },","    twitter          : {","        id           : String,","        token        : String,","        displayName  : String,","        username     : String","    },","    google           : {","        id           : String,","        token        : String,","        email        : String,","        name         : String","    }","","});","","// methods ======================","// generating a hash","userSchema.methods.generateHash = function(password) {","    return bcrypt.hashSync(password, bcrypt.genSaltSync(8), null);","};","","// checking if password is valid","userSchema.methods.validPassword = function(password) {","    return bcrypt.compareSync(password, this.local.password);","};","","// create the model for users and expose it to our app","module.exports = mongoose.model('User', userSchema);"],"id":14}],[{"start":{"row":0,"column":0},"end":{"row":59,"column":52},"action":"remove","lines":["/*","var mongoose = require('mongoose'),","    userSchema = new mongoose.Schema({","       ","       name: {type: String, required: true},","       joinDate: {type: Date, default: Date.now}","    }),","    ","    user = mongoose.model('user', userSchema);","    ","module.exports = user;","","*/","","// app/models/user.js","// load the things we need","var mongoose = require('mongoose');","var bcrypt   = require('bcrypt-nodejs');","","// define the schema for our user model","var userSchema = mongoose.Schema({","","    local            : {","        email        : String,","        password     : String,","    },","    facebook         : {","        id           : String,","        token        : String,","        email        : String,","        name         : String","    },","    twitter          : {","        id           : String,","        token        : String,","        displayName  : String,","        username     : String","    },","    google           : {","        id           : String,","        token        : String,","        email        : String,","        name         : String","    }","","});","","// methods ======================","// generating a hash","userSchema.methods.generateHash = function(password) {","    return bcrypt.hashSync(password, bcrypt.genSaltSync(8), null);","};","","// checking if password is valid","userSchema.methods.validPassword = function(password) {","    return bcrypt.compareSync(password, this.local.password);","};","","// create the model for users and expose it to our app","module.exports = mongoose.model('User', userSchema);"],"id":15},{"start":{"row":0,"column":0},"end":{"row":37,"column":52},"action":"insert","lines":["/ Load required packages","var mongoose = require('mongoose');","var bcrypt = require('bcrypt-nodejs');","","// Define our user schema","var UserSchema = new mongoose.Schema({","  username: {","    type: String,","    unique: true,","    required: true","  },","  password: {","    type: String,","    required: true","  }","});","","// Execute before each user.save() call","UserSchema.pre('save', function(callback) {","  var user = this;","","  // Break out if the password hasn't changed","  if (!user.isModified('password')) return callback();","","  // Password changed so we need to hash it","  bcrypt.genSalt(5, function(err, salt) {","    if (err) return callback(err);","","    bcrypt.hash(user.password, salt, null, function(err, hash) {","      if (err) return callback(err);","      user.password = hash;","      callback();","    });","  });","});","","// Export the Mongoose model","module.exports = mongoose.model('User', UserSchema);"]}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"remove","lines":["/ Load required packages",""],"id":16}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":63,"mode":"ace/mode/javascript"}},"timestamp":1437111889670,"hash":"2264b352fa56fa53b232bbed0c8cc7e759406ad5"}