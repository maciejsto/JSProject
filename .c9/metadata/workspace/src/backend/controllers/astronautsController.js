{"changed":true,"filter":false,"title":"astronautsController.js","tooltip":"/src/backend/controllers/astronautsController.js","value":"'use strict';\n\n\nvar Astronaut = require('../../backend/service/astronauts');\n\n\nmodule.exports = function astronautsController(){\n\n    /*private -------------------------------------------------------*/\n    var name = 'astronautController';\n    var that = this;    //that refers to ArduinoController object\n    that.debug = false;\n\n    /*public - -----------------------------------------------------*/\n    return {\n\n        /*function setting debug mode - -------------------------------------------------------------------*/\n        setDebug: function(flag){\n            that.debug = flag;\n        },\n\n        /*get name of controller --------------------------------------*/ // TODO push to abstract layer?\n        getName: function(){\n            return name;\n        },\n\n\n        /*run function ------------------------------------------------------------------------------------*/\n        run: function(app){\n\n                \n            if(that.debug) {\n                console.log('debug: inside astronaut run function ')\n                console.log(\"controller name: \",this.getName());\n               console.log(app.db); \n            };\n            \n            \n\n            //list all astrnonats in databse--------------------------------------------------------------------------------\n            app.route('/users')\n                //use mongoose to get all astronauts from database\n                /*action on get get method*/\n                .get(function(req, res){\n\n\n                    Astronaut.find(function(err, astronauts){\n                        if(err){\n                            res.send(err);\n                            return;\n                        }\n\n                        console.log('found astronauts');\n                        //res.send(JSON.stringify(astronauts));   // return all astronauts in json format\n                        res.render('users',{astronauts: JSON.stringify(astronauts)});\n                    });\n                })\n\n            //create astronat and send back all astronauts from database-------------------------------------------------\n            //app.route('/users')\n            /*action on post method*/\n                .post(function(req, res){\n                    var randLetter = String.fromCharCode(65 + Math.floor(Math.random() * 26));\n                    var uniqid = randLetter + Date.now();\n\n                    Astronaut.create({\n\n                        \"name\": \"John D\",\n                        \"walkedOnMoon\": true,\n                        \"_id\": uniqid,\n                        \"__v\": 1,\n                        \"lastupdated\": new Date(),\n                        \"skills\": [\n                            \"floatings\",\n                            \"repairings satellites\"\n                        ],\n                        \"missions\": ['1']\n\n                    }, function(err, astronauts){\n                        if(err)\n                            //console.log(err)\n                            res.send(err)\n                        console.log(\"created astronaut\");\n                        Astronaut.find(function(err, astronauts){\n                            if(err)\n                                //res.send(err)\n                            console.log('created new astronaut');\n                            res.render('users',{astronauts: JSON.stringify(astronauts)});\n                            //res.send(JSON.stringify(astronauts));\n                        });\n                    });\n                })\n                /*action on delete method*/\n                .delete(function(req, res) {\n                    Astronaut.collection.remove(function (err) {\n                        console.log('inside del');\n                        if (err)\n                            res.send(err)\n                        console.log('deleting astronaut collection');\n                        Astronaut.find(function(err, astronauts){\n                           if(err)\n                               res.send(err)\n\n                            console.log(\"deleted astronauts\");\n                            res.send(JSON.stringify(astronauts));\n                        });\n                    });\n\n                });\n                \n                \n            app.route('users/:user_id')\n                .delete(function(req, res){\n                    //TODO\n                });\n                \n                    //TOOD\n            //delete astronaut from database-------------------------------------------------------------------------------\n            app.route('users/:_id')\n                .delete(function(req, res){\n                    console.log('inside delete');\n                    //todo\n                    Astronaut.remove({\n                        _id : req.params._id\n                    }, function(err, astronaut){\n                        if(err){\n                            res.semd(err);\n                            return;\n                        }\n                        Astronaut.find(function(err,astronauts){\n                            if(err){\n                                res.send(err);\n                                return;                                \n                            }\n                                \n                            console.log('deleted astronaut');\n                            res.send(JSON.stringify(astronauts));\n                        });\n                    });\n                });\n\n            //application-------------------------------------------------------------------------------------------------\n            app.route('*')\n                .get(function(req,res){\n                    //res.sendfile();\n                    //todo\n                });\n                \n            return this;\n            \n        }//end of run function\n        \n    }//END OF RETURN\n\n};//END OF MODULE","undoManager":{"mark":0,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":29,"column":0},"end":{"row":29,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1416231686000}